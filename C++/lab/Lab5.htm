<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Lab6_files/filelist.xml">
<title>Lab worksheet</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jennifer Pedler</o:Author>
  <o:Template>Lab.dot</o:Template>
  <o:LastAuthor>rajesh pampapathi</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>11</o:TotalTime>
  <o:LastPrinted>2002-10-16T12:41:00Z</o:LastPrinted>
  <o:Created>2002-10-16T15:40:00Z</o:Created>
  <o:LastSaved>2002-10-16T15:40:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>295</o:Words>
  <o:Characters>1687</o:Characters>
  <o:Company>Birkbeck College</o:Company>
  <o:Lines>14</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2071</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	tab-stops:center 216.0pt right 432.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	tab-stops:center 216.0pt right 432.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
span.code
	{mso-style-name:code;
	mso-ansi-font-size:10.0pt;
	mso-ascii-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-ansi-language:EN-GB;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-header:url("./Lab6_files/header.htm") h1;
	mso-footer:url("./Lab6_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:952713168;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l0:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
</head>

<body lang=EN-GB style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt;font-family:
Arial;mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes"> </span></span></b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Arial;mso-bidi-font-family:"Times New Roman";
mso-ansi-language:EN-GB'>Lab worksheet 5<o:p></o:p></span></b></p>

<p class=MsoNormal><span style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Write a procedure that takes two strings (s1 and s2)
as its parameters and swaps them if s1 is shorter than s2<i style='mso-bidi-font-style:
normal'>.</i> Write a main program to test your function. The output should be
in main, not in the procedure.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Write a procedure that takes three strings as its
parameters and swaps them to arrange them in descending order of length (i.e.
longest first). This procedure should call the procedure you wrote for question
1. Modify the program you wrote for question 1 to call your new procedure and output
(in main()) the three strings in descending order of length.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Write a procedure that takes a Time object and an int
(representing a number of hours) as its parameters. It then adds this number of
hours to the time. To do this you need to use a reference parameter for the
Time object. Test the procedure in a program that prompts the user for a number
of hours and then outputs the time that many hours from now.<br>
For a time such as 4:05:05 only a single digit will be displayed for the
minutes and seconds (i.e. 4:5:5). Fixed and setprecision do not work for ints.
To overcome the problem you could add the print_time procedure (Horstmann p170, 3<sup>rd</sup> ed.)
to your program.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Write a boolean function that takes a string as its
parameter and returns true if there are any doubled letters in the string. If
there are doubled letters it should also replace the second of these with an
asterisk (*)<b>. </b>If there are no doubled letters the function returns false
and the string remains unchanged. Test your function in a program that prompts
for a string and calls the function to check for doubled letters. It should
then output a message to say whether letters have been removed or not, together
with the (possibly modified) string.<br>
For example, if the input was "Jenny" the output should be: <br>
</span><span style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-GB'>Doubled letters removed: Jen*y</span><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>. <br>
If the input was "Matt" the output should be: <br>
</span><span style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-GB'>Doubled letters removed: Mat*</span><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>. <br>
If the input was "Roger" the output should be: <br>
</span><span style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-GB'>No doubled letters: Roger</span><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>.
<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>The function you have just written is a function with a side-effect;
it returns a boolean but it also, as a side-effect, (sometimes) replaces characters with stars.
Generally you should avoid side-effects in your functions as they mislead the reader of the program.
If you came across the line <code>if (hasdoublett(s))</code> in someone else's program,
you would not expect that the string <code>s</code>
might be changed by this.  Restructure the function you've just written into (a) a function that simply
returns a boolean telling you whether there are any double letters, and (b) a procedure (void function)
that inserts the stars.  So the call would be something like <code>if(hasdoublett(s)) stardoubles(s);</code>
<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Write a function that takes the start and finish times of a train journey
(as Time objects) and returns a Time representing the length of the journey. Test it in a program.
Make sure it works for, say, setting out at 20:00 and arriving at 1:00.
<o:p></o:p></span></p>

<p class=MsoHeader style='tab-stops:36.0pt'><span style='mso-ansi-language:
EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>If you finish all of these and have time left over,
try any of the following from Chapter 5 of the textbook: P5.2, P5.3,
P5.13<o:p></o:p></span></p>

</div>

</body>

</html>
