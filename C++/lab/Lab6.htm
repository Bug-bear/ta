<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Lab7_files/filelist.xml">
<title>Lab worksheet</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jen Pedler</o:Author>
  <o:Template>Lab.dot</o:Template>
  <o:LastAuthor>rajesh pampapathi</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>25</o:TotalTime>
  <o:LastPrinted>1999-10-22T12:58:00Z</o:LastPrinted>
  <o:Created>2002-10-21T12:28:00Z</o:Created>
  <o:LastSaved>2002-10-21T12:28:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>253</o:Words>
  <o:Characters>1447</o:Characters>
  <o:Company>Birkbeck College</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1777</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	tab-stops:center 216.0pt right 432.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	tab-stops:center 216.0pt right 432.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
span.code
	{mso-style-name:code;
	mso-ansi-font-size:10.0pt;
	mso-ascii-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-ansi-language:EN-GB;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-header:url("./Lab7_files/header.htm") h1;
	mso-footer:url("./Lab7_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:646667643;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l0:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:878931967;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l1:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l2
	{mso-list-id:890115397;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l2:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l3
	{mso-list-id:2124498102;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l3:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
</head>

<body lang=EN-GB style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Arial;mso-bidi-font-family:"Times New Roman";
mso-ansi-language:EN-GB'>Lab worksheet 6<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo3;
tab-stops:list 18.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
11.0pt;mso-bidi-font-size:10.0pt'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:
10.0pt'>Write a program that creates a vector of 10 integers and sets
each odd element's value to the value of its subscript and each even element's
value to the square of its subscript. Output the index and the contents for
each element.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo3;
tab-stops:list 18.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
11.0pt;mso-bidi-font-size:10.0pt'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:
10.0pt'>Write a program that reads three lines of text into a vector and then
outputs the lines in reverse order (i.e. the last line input is the first line
output and so on).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo3;
tab-stops:list 18.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
11.0pt;mso-bidi-font-size:10.0pt'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:
10.0pt'>Modify the program you wrote for exercise 2 above so that it reads
lines of text and stores them in a vector until the end of input is signaled.
Then output the lines in reverse order.<o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>Notes:</span></b><i
style='mso-bidi-font-style:normal'><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;mso-ansi-language:EN-GB'> For the remaining exercises in this worksheet,
the arguments passed to the procedures are the
actual file names (as strings) by which the files are known to the operating
system (e.g.</span></i><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>&quot;<i>N:</i>\C++\nursery.txt&quot;<i
style='mso-bidi-font-style:normal'>)<o:p></o:p></i></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>Remember
that you will have to use the </span></i><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>c_str</span></span><i style='mso-bidi-font-style:
normal'><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:
EN-GB'> function to convert the string parameter to a character array for use
with the </span></i><span class=code><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>open</span></span><i
style='mso-bidi-font-style:normal'><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;mso-ansi-language:EN-GB'> function. (See Horstmann 3rd ed. p435)<o:p></o:p></span></i></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo4;
tab-stops:list 18.0pt'><![if !supportLists]><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;mso-ansi-language:EN-GB'>Write and test a procedure with the heading:<br>
<br>
</span><span class=code><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>void
split(string in, string out1, string out2) <br>
<br>
</span></span><span class=code><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>Note:</span></b></span><span
class=code><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'> </span></span><span
class=code><i style='mso-bidi-font-style:normal'><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>in</span></i></span><span class=code><span style='font-size:
11.0pt;mso-bidi-font-size:10.0pt;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>, <i style='mso-bidi-font-style:normal'>out1</i>
and <i style='mso-bidi-font-style:normal'>out2</i> are string variables<span
style="mso-spacerun: yes">  </span>containing filenames.<br>
The procedure</span></span><span class=code><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>
</span></span><span class=code><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>reads
the text file <i style='mso-bidi-font-style:normal'>in</i> and produces two
text files <i style='mso-bidi-font-style:normal'>out1</i> and <i
style='mso-bidi-font-style:normal'>out2</i>. Lines of <i style='mso-bidi-font-style:
normal'>in</i> that begin with a character less than or equal to 'M' go into <i
style='mso-bidi-font-style:normal'>out1</i> and lines beginning with a
character greater than 'M' go into <i style='mso-bidi-font-style:normal'>out2</i>.
<b style='mso-bidi-font-weight:normal'>The <u>procedure</u> should open and
close all three files. </b>You can assume that the files can be opened, read
and written successfully.<b style='mso-bidi-font-weight:normal'> </b><br>
</span></span><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Use the file <b>n:\</b><b style='mso-bidi-font-weight:
normal'>C++\nursery.txt</b> for input.<span class=code><b style='mso-bidi-font-weight:
normal'><span style='mso-ansi-font-size:11.0pt;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'><br>
</span></b></span><span class=code><span style='mso-ansi-font-size:11.0pt;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>When
you have run the program, check the output by opening the output files in the
text editor.
<span><b style='mso-bidi-font-weight:
normal'><span style='mso-ansi-font-size:11.0pt;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'></b><br>
Remember that backslash is an escape character in C++, so, if you want to put a real backslash
in a string literal, you have to double it, eg <code>"abc\\xyz.txt"</code>.</p>
<o:p></o:p></span></span></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo4;
tab-stops:list 18.0pt'><![if !supportLists]><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span class=code><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>Write and</span></span><span lang=EN-US style='font-size:
11.0pt;mso-bidi-font-size:10.0pt'> test a procedure with the heading:</span><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'><br>
<br>
</span><span class=code><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>void
interleave(string in1, string in2, string out)<br>
</span></span><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'><br>
that reads two text files, <i style='mso-bidi-font-style:normal'>in1</i> and <i
style='mso-bidi-font-style:normal'>in2</i>, and interleaves them to form the
file <i style='mso-bidi-font-style:normal'>out</i>,
so that <i style='mso-bidi-font-style:normal'>out</i> contains the
first line from <i style='mso-bidi-font-style:normal'>in1</i>, then the first
line from <i style='mso-bidi-font-style:normal'>in2</i>, then the second line
from <i style='mso-bidi-font-style:normal'>in1</i>, then the second line from <i
style='mso-bidi-font-style:normal'>in2</i> and so on. If one of the input files
contains more lines than the other, the remaining lines from the longer file
are to be written at the end of file <i style='mso-bidi-font-style:normal'>out</i>.
Again, the <b style='mso-bidi-font-weight:normal'><u>procedure</u> should open
and close all three files</b>. You can make the same assumptions as in 1 above.<br>
Use the files <b>n:\</b><b style='mso-bidi-font-weight:normal'>C++\first.txt </b><span
style='mso-bidi-font-weight:bold'>and</span><b style='mso-bidi-font-weight:
normal'> n:\C++\second.txt</b> for input.<br>
Again, check the output by opening the output file in the text editor.</span><span
lang=EN-US style='font-size:11.0pt;mso-bidi-font-size:10.0pt'><br>
<br>
</span><b style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>Reference</span></b><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>:
Horstmann  pp 434-436 (3<sup>rd</sup> ed.) <o:p></o:p></span></p>

</div>

</body>

</html>
