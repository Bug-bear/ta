<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Lab13_files/filelist.xml">
<title>Lab worksheet</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jen Pedler</o:Author>
  <o:Template>Lab.dot</o:Template>
  <o:LastAuthor>rajesh pampapathi</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>6</o:TotalTime>
  <o:LastPrinted>2002-11-11T14:13:00Z</o:LastPrinted>
  <o:Created>2002-11-11T14:19:00Z</o:Created>
  <o:LastSaved>2002-11-11T14:19:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>175</o:Words>
  <o:Characters>1001</o:Characters>
  <o:Company>Birkbeck College</o:Company>
  <o:Lines>8</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1229</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	tab-stops:center 216.0pt right 432.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	tab-stops:center 216.0pt right 432.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:18.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.code
	{mso-style-name:code;
	mso-ansi-font-size:10.0pt;
	mso-ascii-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-ansi-language:EN-GB;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-header:url("./Lab13_files/header.htm") h1;
	mso-footer:url("./Lab13_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:695040310;
	mso-list-type:simple;
	mso-list-template-ids:-769759904;}
@list l0:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	mso-ansi-font-size:12.0pt;
	font-family:"Times New Roman";}
@list l1
	{mso-list-id:890117491;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l1:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-GB style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoTitle><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Lab
worksheet 10<o:p></o:p></span></p>

<p class=MsoTitle><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoTitle><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;
mso-ansi-language:EN-GB'>Use this class definition for the exercises on this
sheet:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>class Node<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>{<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>public:<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><span style='mso-tab-count:1'>   </span>int
n;<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><span style='mso-tab-count:1'>   </span>Node*
link;<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>};<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:18.0pt;margin-bottom:.0001pt'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoBodyTextIndent style='text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 18.0pt'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt'>Write
a procedure </span><span class=code><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>void
display(Node*)</span></span><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt'> that takes a pointer to a singly-linked list of Nodes as its parameter
and outputs the numbers in the list on one line separated by spaces. (The functions
in this worksheet take pointers to Nodes as their parameters; they are not member
functions of the <code>Node</code> class.)
<br>
Create a list by the method described in question 2 in order to test your <code>display</code>
procedure. (If you can't wait to test your <code>display</code>, just have two Node* variables
in main, make each one point at a Node,
and link the Nodes together to make a little list.)<o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 18.0pt'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt'>Write
a procedure that takes a pointer to the head of a singly-linked list and an int
as its parameters. It then adds a new node containing this int to the front (the head end) of
the list. <i style='mso-bidi-font-style:normal'>Think carefully about the
parameter passing and don't forget that the head pointer may be NULL .</i><br>
Write a program that reads in a few numbers and uses this procedure to create a list containing them.
(Begin with a <code>Node*</code> variable, called, say, <code>head</code>, initialized to NULL; then repeatedly call
<code>addnode(head, x);</code> where <code>x</code> is an <code>int</code>.)
<br>
It should then call the </span><span class=code><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>display()</span></span><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt'> procedure to check that the
list has been created successfully.</span><span style='font-size:11.0pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 18.0pt'><![if !supportLists]>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt'>Write
a boolean function that takes a pointer to the head of a singly-linked list of
Nodes and an int as its parameters. If the int is in the list it should return
true, otherwise it should return false.<br>
Add code to the program you wrote for question 2 to prompt the user for an int
and then call your function to check whether the int is in the list.
(If you terminated your input loop with <code>cin</code> in a fail state, you
will need a <code>cin.clear()</code> and possibly a <code>cin.ignore()</code>
before you can input anything more.)
</span><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 18.0pt'><![if !supportLists]>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt'>Write
a procedure similar to the one in question 2 except that it adds the new node at the
<em>tail</em> of the list.</span><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 18.0pt'><![if !supportLists]>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt'>Write
a function that takes a pointer to the head of a singly-linked list of
Nodes, removes the head node and returns the value in the node that's just been removed.
Modify your program to test this function. Does it work correctly for all the nodes,
including if there is only one left in the list? What does it do if the list is empty?
If you have removed all the nodes, are you then able to add new ones, using your procedure
from question 2?</span><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 18.0pt'><![if !supportLists]>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt'>Do
question 5 again, but this time remove the <em>tail</em> node.</span><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>



<p class=MsoBodyTextIndent style='margin-left:0cm'><span class=code><span
style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal><span class=code><span style='font-size:10.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

</div>

</body>

</html>
